# GameConfig.py
import json
import os
from typing import Dict, Any

class GameConfig:
    """–ö–ª–∞—Å—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–≥—Ä—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º @property –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ JSON"""
    
    def __init__(self, config_file="game_config.json"):
        self._config_file = config_file
        self._game_title = "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∞—è –ò–≥—Ä–∞"
        self._max_players = 2
        self._starting_resources = 1000
        self._map_size = (10, 10)
        self._difficulty = "normal"
        self._game_version = "1.0"
        self._auto_save = True
        self._music_volume = 80
        self._sound_volume = 90
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
        self.load_from_file()
    
    # === –°–≤–æ–π—Å—Ç–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º @property ===
    
    @property
    def game_title(self) -> str:
        """–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã"""
        return self._game_title
    
    @game_title.setter
    def game_title(self, value: str):
        if not value or not isinstance(value, str):
            raise ValueError("–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π")
        self._game_title = value
    
    @property
    def max_players(self) -> int:
        """–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤"""
        return self._max_players
    
    @max_players.setter
    def max_players(self, value: int):
        if not isinstance(value, int) or value < 1 or value > 4:
            raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 4")
        self._max_players = value
    
    @property
    def starting_resources(self) -> int:
        """–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã"""
        return self._starting_resources
    
    @starting_resources.setter
    def starting_resources(self, value: int):
        if not isinstance(value, int) or value < 100:
            raise ValueError("–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 100")
        self._starting_resources = value
    
    @property
    def map_size(self) -> tuple:
        """–†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã (—à–∏—Ä–∏–Ω–∞, –≤—ã—Å–æ—Ç–∞)"""
        return self._map_size
    
    @map_size.setter
    def map_size(self, value: tuple):
        if not isinstance(value, tuple) or len(value) != 2:
            raise ValueError("–†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ—Ä—Ç–µ–∂–µ–º –∏–∑ –¥–≤—É—Ö —á–∏—Å–µ–ª")
        width, height = value
        if not (5 <= width <= 20 and 5 <= height <= 20):
            raise ValueError("–†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 5x5 –¥–æ 20x20")
        self._map_size = value
    
    @property
    def difficulty(self) -> str:
        """–°–ª–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä—ã"""
        return self._difficulty
    
    @difficulty.setter
    def difficulty(self, value: str):
        valid_difficulties = ["easy", "normal", "hard", "expert"]
        if value not in valid_difficulties:
            raise ValueError(f"–°–ª–æ–∂–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–æ–π –∏–∑: {valid_difficulties}")
        self._difficulty = value
    
    @property
    def game_version(self) -> str:
        """–í–µ—Ä—Å–∏—è –∏–≥—Ä—ã"""
        return self._game_version
    
    @game_version.setter
    def game_version(self, value: str):
        if not isinstance(value, str):
            raise ValueError("–í–µ—Ä—Å–∏—è –∏–≥—Ä—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π")
        self._game_version = value
    
    @property
    def auto_save(self) -> bool:
        """–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ"""
        return self._auto_save
    
    @auto_save.setter
    def auto_save(self, value: bool):
        if not isinstance(value, bool):
            raise ValueError("–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±—É–ª–µ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º")
        self._auto_save = value
    

    
    # === –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ ===
    
    def to_dict(self) -> Dict[str, Any]:
        """–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è JSON"""
        return {
            "game_title": self._game_title,
            "max_players": self._max_players,
            "starting_resources": self._starting_resources,
            "map_size": {
                "width": self._map_size[0],
                "height": self._map_size[1]
            },
            "difficulty": self._difficulty,
            "game_version": self._game_version,
            "auto_save": self._auto_save,
            
        }
    
    def save_to_file(self, filename: str = None) -> bool:
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ JSON —Ñ–∞–π–ª"""
        try:
            if filename is None:
                filename = self._config_file
            
            with open(filename, 'w', encoding='utf-8') as f:
                json.dump(self.to_dict(), f, ensure_ascii=False, indent=4)
            
            print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: {filename}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return False
    
    def load_from_file(self, filename: str = None) -> bool:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
        try:
            if filename is None:
                filename = self._config_file
            
            if not os.path.exists(filename):
                print(f"üìù –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
                return False
            
            with open(filename, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–∏–ø–æ–≤
            self._game_title = data.get("game_title", self._game_title)
            self._max_players = data.get("max_players", self._max_players)
            self._starting_resources = data.get("starting_resources", self._starting_resources)
            
            map_data = data.get("map_size", {})
            self._map_size = (
                map_data.get("width", self._map_size[0]),
                map_data.get("height", self._map_size[1])
            )
            
            self._difficulty = data.get("difficulty", self._difficulty)
            self._game_version = data.get("game_version", self._game_version)
            self._auto_save = data.get("auto_save", self._auto_save)
        
            
            print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞: {filename}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return False
    
    def display_config(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        print(f"\n‚öôÔ∏è  –¢–ï–ö–£–©–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò–ì–†–´:")
        print(f"   üéÆ –ù–∞–∑–≤–∞–Ω–∏–µ: {self.game_title}")
        print(f"   üë• –ú–∞–∫—Å. –∏–≥—Ä–æ–∫–æ–≤: {self.max_players}")
        print(f"   üí∞ –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã: {self.starting_resources}")
        print(f"   üó∫Ô∏è  –†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã: {self.map_size[0]}x{self.map_size[1]}")
        print(f"   üéØ –°–ª–æ–∂–Ω–æ—Å—Ç—å: {self.difficulty}")
        print(f"   üîÑ –í–µ—Ä—Å–∏—è: {self.game_version}")
        print(f"   üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {'–í–∫–ª' if self.auto_save else '–í—ã–∫–ª'}")
       
    
    def update_config_interactive(self):
        """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        print(f"\n‚öôÔ∏è  –ò–ó–ú–ï–ù–ï–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ò–ì–†–´")
        
        try:
            # –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
            new_title = input(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã [{self.game_title}]: ") or self.game_title
            self.game_title = new_title
            
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤
            new_players = input(f"–ú–∞–∫—Å. –∏–≥—Ä–æ–∫–æ–≤ (1-4) [{self.max_players}]: ") or str(self.max_players)
            self.max_players = int(new_players)
            
            # –°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã
            new_resources = input(f"–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã (‚â•100) [{self.starting_resources}]: ") or str(self.starting_resources)
            self.starting_resources = int(new_resources)
            
            # –†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã
            new_width = input(f"–®–∏—Ä–∏–Ω–∞ –∫–∞—Ä—Ç—ã (5-20) [{self.map_size[0]}]: ") or str(self.map_size[0])
            new_height = input(f"–í—ã—Å–æ—Ç–∞ –∫–∞—Ä—Ç—ã (5-20) [{self.map_size[1]}]: ") or str(self.map_size[1])
            self.map_size = (int(new_width), int(new_height))
            
            # –°–ª–æ–∂–Ω–æ—Å—Ç—å
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: easy, normal, hard, expert")
            new_difficulty = input(f"–°–ª–æ–∂–Ω–æ—Å—Ç—å [{self.difficulty}]: ") or self.difficulty
            self.difficulty = new_difficulty
            
            # –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
            auto_save_input = input(f"–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ (y/n) [{'y' if self.auto_save else 'n'}]: ") 
            self.auto_save = auto_save_input.lower() == 'y' if auto_save_input else self.auto_save
            
        
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            
        except ValueError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞: {e}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config = GameConfig()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config.display_config()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    config.save_to_file()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config.update_config_interactive()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config.save_to_file()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Ñ–∞–π–ª–∞
    print("\n" + "="*50)
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    new_config = GameConfig()
    new_config.display_config()